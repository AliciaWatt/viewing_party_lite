---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT SHOW MY API KEY&page=1&query=man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 11 May 2022 22:40:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 b7f0c5734a286f56595c1e1b456020a2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - IGAzq87RWctn24hFoMMFcSxJzsG9Fa6hHEYYO-K0mfIiqSjjVFYvCw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNE9UWWVmY0FsYVNobjZUR1ZLMzNVeExXOVI3LmpwZyIsImdlbnJlX2lkcyI6WzI4LDEyLDUzLDEwNzUyLDk2NDhdLCJpZCI6NDc2NjY5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgS2luZydzIE1hbiIsIm92ZXJ2aWV3IjoiQXMgYSBjb2xsZWN0aW9uIG9mIGhpc3RvcnkncyB3b3JzdCB0eXJhbnRzIGFuZCBjcmltaW5hbCBtYXN0ZXJtaW5kcyBnYXRoZXIgdG8gcGxvdCBhIHdhciB0byB3aXBlIG91dCBtaWxsaW9ucywgb25lIG1hbiBtdXN0IHJhY2UgYWdhaW5zdCB0aW1lIHRvIHN0b3AgdGhlbS4iLCJwb3B1bGFyaXR5Ijo1NTkuMDksInBvc3Rlcl9wYXRoIjoiL25qNUhtSFJac3JZUUVZWVh5QXVzRnYzNWVyUC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTEyLTIyIiwidGl0bGUiOiJUaGUgS2luZydzIE1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjksInZvdGVfY291bnQiOjI1NzJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2lRRmN3U0diWlhNa2V5S3J4YlBud25SbzVmbC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJpZCI6NjM0NjQ5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGlkZXItTWFuOiBObyBXYXkgSG9tZSIsIm92ZXJ2aWV3IjoiUGV0ZXIgUGFya2VyIGlzIHVubWFza2VkIGFuZCBubyBsb25nZXIgYWJsZSB0byBzZXBhcmF0ZSBoaXMgbm9ybWFsIGxpZmUgZnJvbSB0aGUgaGlnaC1zdGFrZXMgb2YgYmVpbmcgYSBzdXBlci1oZXJvLiBXaGVuIGhlIGFza3MgZm9yIGhlbHAgZnJvbSBEb2N0b3IgU3RyYW5nZSB0aGUgc3Rha2VzIGJlY29tZSBldmVuIG1vcmUgZGFuZ2Vyb3VzLCBmb3JjaW5nIGhpbSB0byBkaXNjb3ZlciB3aGF0IGl0IHRydWx5IG1lYW5zIHRvIGJlIFNwaWRlci1NYW4uIiwicG9wdWxhcml0eSI6MzkzMy45NjQsInBvc3Rlcl9wYXRoIjoiLzFnMGRoWXRxNGlyVFkxR1BYdmZ0Nms0WUxqbS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTEyLTE1IiwidGl0bGUiOiJTcGlkZXItTWFuOiBObyBXYXkgSG9tZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LjEsInZvdGVfY291bnQiOjEyNjAyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90NFRvOGZlVVN5c3lCczR0bEJBYlhJcktsQ3YuanBnIiwiZ2VucmVfaWRzIjpbMjgsNTNdLCJpZCI6ODYwNjIzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJMYXN0IE1hbiBEb3duIiwib3ZlcnZpZXciOiJBZnRlciBjaXZpbGl6YXRpb24gc3VjY3VtYnMgdG8gYSBkZWFkbHkgcGFuZGVtaWMgYW5kIGhpcyB3aWZlIGlzIG11cmRlcmVkLCBhIHNwZWNpYWwgZm9yY2VzIHNvbGRpZXIgYWJhbmRvbnMgaGlzIGR1dHkgYW5kIGJlY29tZXMgYSBoZXJtaXQgaW4gdGhlIE5vcmRpYyB3aWxkZXJuZXNzLiBZZWFycyBsYXRlciwgYSB3b3VuZGVkIHdvbWFuIGFwcGVhcnMgb24gaGlzIGRvb3JzdGVwLiBTaGUncyBlc2NhcGVkIGZyb20gYSBsYWIgYW5kIGhlciBwdXJzdWVycyBiZWxpZXZlIGhlciBibG9vZCBpcyB0aGUga2V5IHRvIGEgd29ybGR3aWRlIGN1cmUuIEhlJ3MgaGVzaXRhbnQgdG8gZ2V0IGludm9sdmVkLCBidXQgYWxsIGRvdWJ0cyBhcmUgY2FzdCBhc2lkZSB3aGVuIGhlIGRpc2NvdmVycyBoZXIgcHVyc3VlciBpcyBub25lIG90aGVyIHRoYW4gQ29tbWFuZGVyIFN0b25lLCB0aGUgbWFuIHRoYXQgbXVyZGVyZWQgaGlzIHdpZmUgc29tZSB5ZWFycyBhZ28uIiwicG9wdWxhcml0eSI6NTI5LjQ1MywicG9zdGVyX3BhdGgiOiIvNEI3bGlDeE5DWklaR09ObUFNa0NueFZsWlFWLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMTAtMTkiLCJ0aXRsZSI6Ikxhc3QgTWFuIERvd24iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni4zLCJ2b3RlX2NvdW50Ijo0NDN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2dVQVRhaVlGamxJWVdMbVZzUGN1VGhHVEZuVS5qcGciLCJnZW5yZV9pZHMiOlsxNCwyOF0sImlkIjo1NTcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlNwaWRlci1NYW4iLCJvdmVydmlldyI6IkFmdGVyIGJlaW5nIGJpdHRlbiBieSBhIGdlbmV0aWNhbGx5IGFsdGVyZWQgc3BpZGVyIGF0IE9zY29ycCwgbmVyZHkgYnV0IGVuZGVhcmluZyBoaWdoIHNjaG9vbCBzdHVkZW50IFBldGVyIFBhcmtlciBpcyBlbmRvd2VkIHdpdGggYW1hemluZyBwb3dlcnMgdG8gYmVjb21lIHRoZSBzdXBlcmhlcm8ga25vd24gYXMgU3BpZGVyLU1hbi4iLCJwb3B1bGFyaXR5IjoxMTUuNjc2LCJwb3N0ZXJfcGF0aCI6Ii9naDRjWmJoWnh5VGJneFFQeEQwZE91ZE5QVG4uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMi0wNS0wMSIsInRpdGxlIjoiU3BpZGVyLU1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIsInZvdGVfY291bnQiOjE1NjQ1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9zNmNRZ0pTa3ZpYW1YQVhCZ2dUMnhtajdKaUcuanBnIiwiZ2VucmVfaWRzIjpbMjgsODc4LDEyXSwiaWQiOjE3MjYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Iklyb24gTWFuIiwib3ZlcnZpZXciOiJBZnRlciBiZWluZyBoZWxkIGNhcHRpdmUgaW4gYW4gQWZnaGFuIGNhdmUsIGJpbGxpb25haXJlIGVuZ2luZWVyIFRvbnkgU3RhcmsgY3JlYXRlcyBhIHVuaXF1ZSB3ZWFwb25pemVkIHN1aXQgb2YgYXJtb3IgdG8gZmlnaHQgZXZpbC4iLCJwb3B1bGFyaXR5IjoxMTYuNDQ4LCJwb3N0ZXJfcGF0aCI6Ii83OGxQdHd2NzJlVE5xRlc5Q09CWUkwZFdESmEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0wNC0zMCIsInRpdGxlIjoiSXJvbiBNYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42LCJ2b3RlX2NvdW50IjoyMjY4MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNzBBVjJYeDVGUVlqMjBsYWJwMEVHZGJqSTZFLmpwZyIsImdlbnJlX2lkcyI6WzI4LDgwLDUzXSwiaWQiOjYzNzY0OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV3JhdGggb2YgTWFuIiwib3ZlcnZpZXciOiJBIGNvbGQgYW5kIG15c3RlcmlvdXMgbmV3IHNlY3VyaXR5IGd1YXJkIGZvciBhIExvcyBBbmdlbGVzIGNhc2ggdHJ1Y2sgY29tcGFueSBzdXJwcmlzZXMgaGlzIGNvLXdvcmtlcnMgd2hlbiBoZSB1bmxlYXNoZXMgcHJlY2lzaW9uIHNraWxscyBkdXJpbmcgYSBoZWlzdC4gVGhlIGNyZXcgaXMgbGVmdCB3b25kZXJpbmcgd2hvIGhlIGlzIGFuZCB3aGVyZSBoZSBjYW1lIGZyb20uIFNvb24sIHRoZSBtYXJrc21hbidzIHVsdGltYXRlIG1vdGl2ZSBiZWNvbWVzIGNsZWFyIGFzIGhlIHRha2VzIGRyYW1hdGljIGFuZCBpcnJldm9jYWJsZSBzdGVwcyB0byBzZXR0bGUgYSBzY29yZS4iLCJwb3B1bGFyaXR5IjoyMDEuNjM0LCJwb3N0ZXJfcGF0aCI6Ii9NN1NVSzg1c0tqYVN0ZzRUS2hsQVZ5R2x6My5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA0LTIyIiwidGl0bGUiOiJXcmF0aCBvZiBNYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny43LCJ2b3RlX2NvdW50IjozNjAxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83bG1CdWZFRzdQN1kxSENsWUszZ0N4WXJrZ1MuanBnIiwiZ2VucmVfaWRzIjpbMTIsMjgsODc4XSwiaWQiOjEwMTM4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJcm9uIE1hbiAyIiwib3ZlcnZpZXciOiJXaXRoIHRoZSB3b3JsZCBub3cgYXdhcmUgb2YgaGlzIGR1YWwgbGlmZSBhcyB0aGUgYXJtb3JlZCBzdXBlcmhlcm8gSXJvbiBNYW4sIGJpbGxpb25haXJlIGludmVudG9yIFRvbnkgU3RhcmsgZmFjZXMgcHJlc3N1cmUgZnJvbSB0aGUgZ292ZXJubWVudCwgdGhlIHByZXNzIGFuZCB0aGUgcHVibGljIHRvIHNoYXJlIGhpcyB0ZWNobm9sb2d5IHdpdGggdGhlIG1pbGl0YXJ5LiBVbndpbGxpbmcgdG8gbGV0IGdvIG9mIGhpcyBpbnZlbnRpb24sIFN0YXJrLCB3aXRoIFBlcHBlciBQb3R0cyBhbmQgSmFtZXMgJ1Job2RleScgUmhvZGVzIGF0IGhpcyBzaWRlLCBtdXN0IGZvcmdlIG5ldyBhbGxpYW5jZXMg4oCTIGFuZCBjb25mcm9udCBwb3dlcmZ1bCBlbmVtaWVzLiIsInBvcHVsYXJpdHkiOjE1Ny44OTMsInBvc3Rlcl9wYXRoIjoiLzZXQmVxNGZDZm43QU4wbzIxVzlxTmNSRjJsOS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTA0LTI4IiwidGl0bGUiOiJJcm9uIE1hbiAyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOCwidm90ZV9jb3VudCI6MTc4Nzl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2E3c0FxTUt2NXRrQWRNekZmSWhQcUlCbVE5Zy5qcGciLCJnZW5yZV9pZHMiOls4NzgsMjgsMTJdLCJpZCI6MTAyODk5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBbnQtTWFuIiwib3ZlcnZpZXciOiJBcm1lZCB3aXRoIHRoZSBhc3RvbmlzaGluZyBhYmlsaXR5IHRvIHNocmluayBpbiBzY2FsZSBidXQgaW5jcmVhc2UgaW4gc3RyZW5ndGgsIG1hc3RlciB0aGllZiBTY290dCBMYW5nIG11c3QgZW1icmFjZSBoaXMgaW5uZXItaGVybyBhbmQgaGVscCBoaXMgbWVudG9yLCBEb2N0b3IgSGFuayBQeW0sIHByb3RlY3QgdGhlIHNlY3JldCBiZWhpbmQgaGlzIHNwZWN0YWN1bGFyIEFudC1NYW4gc3VpdCBmcm9tIGEgbmV3IGdlbmVyYXRpb24gb2YgdG93ZXJpbmcgdGhyZWF0cy4gQWdhaW5zdCBzZWVtaW5nbHkgaW5zdXJtb3VudGFibGUgb2JzdGFjbGVzLCBQeW0gYW5kIExhbmcgbXVzdCBwbGFuIGFuZCBwdWxsIG9mZiBhIGhlaXN0IHRoYXQgd2lsbCBzYXZlIHRoZSB3b3JsZC4iLCJwb3B1bGFyaXR5Ijo3OS40NTEsInBvc3Rlcl9wYXRoIjoiL3JTOTdoVUoxb3RLVFRyaXBHd1EwdWpidUlyaS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE1LTA3LTE0IiwidGl0bGUiOiJBbnQtTWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwidm90ZV9jb3VudCI6MTcwMzJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3RUbEFBMFJFR1BYU1pQQmZXeVRXOWlwSXYxSS5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzgsMThdLCJpZCI6MzE1NjM1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGlkZXItTWFuOiBIb21lY29taW5nIiwib3ZlcnZpZXciOiJGb2xsb3dpbmcgdGhlIGV2ZW50cyBvZiBDYXB0YWluIEFtZXJpY2E6IENpdmlsIFdhciwgUGV0ZXIgUGFya2VyLCB3aXRoIHRoZSBoZWxwIG9mIGhpcyBtZW50b3IgVG9ueSBTdGFyaywgdHJpZXMgdG8gYmFsYW5jZSBoaXMgbGlmZSBhcyBhbiBvcmRpbmFyeSBoaWdoIHNjaG9vbCBzdHVkZW50IGluIFF1ZWVucywgTmV3IFlvcmsgQ2l0eSwgd2l0aCBmaWdodGluZyBjcmltZSBhcyBoaXMgc3VwZXJoZXJvIGFsdGVyIGVnbyBTcGlkZXItTWFuIGFzIGEgbmV3IHRocmVhdCwgdGhlIFZ1bHR1cmUsIGVtZXJnZXMuIiwicG9wdWxhcml0eSI6MTYzLjYyMSwicG9zdGVyX3BhdGgiOiIvYzI0c3Yyd2VUSFBzbURhN2pFTU4wbTJQM1JULmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMDctMDUiLCJ0aXRsZSI6IlNwaWRlci1NYW46IEhvbWVjb21pbmciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny40LCJ2b3RlX2NvdW50IjoxODUxNn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdEthMWdtR0tBVVZZbmZsWWNhZGlwZUwzZDloLmpwZyIsImdlbnJlX2lkcyI6WzI4LDEyLDg3OF0sImlkIjo2ODcyMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSXJvbiBNYW4gMyIsIm92ZXJ2aWV3IjoiV2hlbiBUb255IFN0YXJrJ3Mgd29ybGQgaXMgdG9ybiBhcGFydCBieSBhIGZvcm1pZGFibGUgdGVycm9yaXN0IGNhbGxlZCB0aGUgTWFuZGFyaW4sIGhlIHN0YXJ0cyBhbiBvZHlzc2V5IG9mIHJlYnVpbGRpbmcgYW5kIHJldHJpYnV0aW9uLiIsInBvcHVsYXJpdHkiOjExNi4wNzIsInBvc3Rlcl9wYXRoIjoiL3FoUHRBYzFUS2JNUHFOdmNkWFNPbjlCbjdoWi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTA0LTE4IiwidGl0bGUiOiJJcm9uIE1hbiAzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOSwidm90ZV9jb3VudCI6MTk0MDh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3NMV1V0YnJwaUxwMjNhMFhEU2lVaWx0ZEZQSi5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiwxNF0sImlkIjoxOTMwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQW1hemluZyBTcGlkZXItTWFuIiwib3ZlcnZpZXciOiJQZXRlciBQYXJrZXIgaXMgYW4gb3V0Y2FzdCBoaWdoIHNjaG9vbGVyIGFiYW5kb25lZCBieSBoaXMgcGFyZW50cyBhcyBhIGJveSwgbGVhdmluZyBoaW0gdG8gYmUgcmFpc2VkIGJ5IGhpcyBVbmNsZSBCZW4gYW5kIEF1bnQgTWF5LiBMaWtlIG1vc3QgdGVlbmFnZXJzLCBQZXRlciBpcyB0cnlpbmcgdG8gZmlndXJlIG91dCB3aG8gaGUgaXMgYW5kIGhvdyBoZSBnb3QgdG8gYmUgdGhlIHBlcnNvbiBoZSBpcyB0b2RheS4gQXMgUGV0ZXIgZGlzY292ZXJzIGEgbXlzdGVyaW91cyBicmllZmNhc2UgdGhhdCBiZWxvbmdlZCB0byBoaXMgZmF0aGVyLCBoZSBiZWdpbnMgYSBxdWVzdCB0byB1bmRlcnN0YW5kIGhpcyBwYXJlbnRzJyBkaXNhcHBlYXJhbmNlIOKAkyBsZWFkaW5nIGhpbSBkaXJlY3RseSB0byBPc2NvcnAgYW5kIHRoZSBsYWIgb2YgRHIuIEN1cnQgQ29ubm9ycywgaGlzIGZhdGhlcidzIGZvcm1lciBwYXJ0bmVyLiBBcyBTcGlkZXItTWFuIGlzIHNldCBvbiBhIGNvbGxpc2lvbiBjb3Vyc2Ugd2l0aCBDb25ub3JzJyBhbHRlciBlZ28sIFRoZSBMaXphcmQsIFBldGVyIHdpbGwgbWFrZSBsaWZlLWFsdGVyaW5nIGNob2ljZXMgdG8gdXNlIGhpcyBwb3dlcnMgYW5kIHNoYXBlIGhpcyBkZXN0aW55IHRvIGJlY29tZSBhIGhlcm8uIiwicG9wdWxhcml0eSI6MjA2LjIyMiwicG9zdGVyX3BhdGgiOiIvZlNicVBicVhhN2VQbzhiY25aWU45QUh2NnpBLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDYtMjMiLCJ0aXRsZSI6IlRoZSBBbWF6aW5nIFNwaWRlci1NYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni43LCJ2b3RlX2NvdW50IjoxNDgzOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNk1RbXRXazRjRndTRHlOdklnb0pSQklIVVQzLmpwZyIsImdlbnJlX2lkcyI6WzE0LDI4LDEyXSwiaWQiOjU1OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3BpZGVyLU1hbiAzIiwib3ZlcnZpZXciOiJUaGUgc2VlbWluZ2x5IGludmluY2libGUgU3BpZGVyLU1hbiBnb2VzIHVwIGFnYWluc3QgYW4gYWxsLW5ldyBjcm9wIG9mIHZpbGxhaW5z4oCUaW5jbHVkaW5nIHRoZSBzaGFwZS1zaGlmdGluZyBTYW5kbWFuLiBXaGlsZSBTcGlkZXItTWFu4oCZcyBzdXBlcnBvd2VycyBhcmUgYWx0ZXJlZCBieSBhbiBhbGllbiBvcmdhbmlzbSwgaGlzIGFsdGVyIGVnbywgUGV0ZXIgUGFya2VyLCBkZWFscyB3aXRoIG5lbWVzaXMgRWRkaWUgQnJvY2sgYW5kIGFsc28gZ2V0cyBjYXVnaHQgdXAgaW4gYSBsb3ZlIHRyaWFuZ2xlLiIsInBvcHVsYXJpdHkiOjEwOC40NzEsInBvc3Rlcl9wYXRoIjoiL3FGbXdoVlVvVVNYamtLUm1jYTV5R0RFWEJJai5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA3LTA1LTAxIiwidGl0bGUiOiJTcGlkZXItTWFuIDMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni40LCJ2b3RlX2NvdW50IjoxMTU4MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNjlFRmdXV1BGV2JSTkhtUWdZZFNueUo5NEdlLmpwZyIsImdlbnJlX2lkcyI6WzI4LDEyLDE0LDg3OF0sImlkIjo0OTUyMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWFuIG9mIFN0ZWVsIiwib3ZlcnZpZXciOiJBIHlvdW5nIGJveSBsZWFybnMgdGhhdCBoZSBoYXMgZXh0cmFvcmRpbmFyeSBwb3dlcnMgYW5kIGlzIG5vdCBvZiB0aGlzIGVhcnRoLiBBcyBhIHlvdW5nIG1hbiwgaGUgam91cm5leXMgdG8gZGlzY292ZXIgd2hlcmUgaGUgY2FtZSBmcm9tIGFuZCB3aGF0IGhlIHdhcyBzZW50IGhlcmUgdG8gZG8uIEJ1dCB0aGUgaGVybyBpbiBoaW0gbXVzdCBlbWVyZ2UgaWYgaGUgaXMgdG8gc2F2ZSB0aGUgd29ybGQgZnJvbSBhbm5paGlsYXRpb24gYW5kIGJlY29tZSB0aGUgc3ltYm9sIG9mIGhvcGUgZm9yIGFsbCBtYW5raW5kLiIsInBvcHVsYXJpdHkiOjgwLjcyMiwicG9zdGVyX3BhdGgiOiIvN3JJUGpuNVRVSzA0TzI1WmtNeUhyR05QZ0x4LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTMtMDYtMTIiLCJ0aXRsZSI6Ik1hbiBvZiBTdGVlbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjYsInZvdGVfY291bnQiOjEzMTAxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9rdWVCTW5vWlZtYWdNZlA2b3J0dmtPVnVXdEkuanBnIiwiZ2VucmVfaWRzIjpbMzUsMTA3NDldLCJpZCI6MTAyMDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlllcyBNYW4iLCJvdmVydmlldyI6IkNhcmwgQWxsZW4gaGFzIHN0dW1ibGVkIGFjcm9zcyBhIHdheSB0byBzaGFrZSBmcmVlIG9mIHBvc3QtZGl2b3JjZSBibHVlcyBhbmQgYSBkZWFkLWVuZCBqb2I6IGVtYnJhY2UgbGlmZSBhbmQgc2F5IHllcyB0byBldmVyeXRoaW5nLiIsInBvcHVsYXJpdHkiOjU2LjI4NSwicG9zdGVyX3BhdGgiOiIvMTZ6VmJnRkxUVWFVVEcxd1FIdUdqZldOdURNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMTItMDkiLCJ0aXRsZSI6IlllcyBNYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni42LCJ2b3RlX2NvdW50Ijo1NjM4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii96WWkwdDhPSklCcUpkUlFwODBLVVc2am5jMHUuanBnIiwiZ2VucmVfaWRzIjpbMzUsODBdLCJpZCI6OTA3Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTGl0dGxlIE1hbiIsIm92ZXJ2aWV3IjoiQWZ0ZXIgbGVhdmluZyB0aGUgcHJpc29uLCB0aGUgZHdhcmYgY3JpbWluYWwgQ2FsdmluIFNpbXMgam9pbnMgdG8gaGlzIG1vcm9uIGJyb3RoZXIgUGVyY3kgdG8gc3RlYWwgYW4gZXhwZW5zaXZlIGh1Z2UgZGlhbW9uZCBpbiBhIGpld2VscnkgZm9yIHRoZSBtb2JzdGVyIFdhbGtlbi4gVGhleSBhcmUgY2hhc2VkIGJ5IHRoZSBwb2xpY2UsIGFuZCBDYWx2aW4gaGlkZXMgdGhlIHN0b25lIGluIHRoZSBwdXJzZSBvZiB0aGUgZXhlY3V0aXZlIFZhbmVzc2EgRWR3YXJkcywgd2hvc2UgaHVzYmFuZCBEYXJyeWwgRWR3YXJkcyB3YW50cyB0byBoYXZlIGEgYmFieS4gUGVyY3kgY29udmluY2VzIENhbHZpbiB0byBkcmVzcyBsaWtlIGEgYmFieSBhbmQgYmUgbGVmdCBpbiBmcm9udCBvZiB0aGUgRWR3YXJkcydzIGhvdXNlIHRvIGdldCBpbnNpZGUgdGhlIGhvdXNlIGFuZCByZXRyaWV2ZSB0aGUgZGlhbW9uZC4gRGFycnlsIGFuZCBWYW5lc3NhIGtlZXAgQ2FsdmluIGZvciB0aGUgd2Vla2VuZCBhbmQgZGVjaWRlIHRvIGFkb3B0IGhpbSwgd2hpbGUgV2Fsa2VuIHRocmVhdGVucyBEYXJyeWwgdG8gZ2V0IHRoZSBzdG9uZSBiYWNrLiIsInBvcHVsYXJpdHkiOjQ3LjM2OSwicG9zdGVyX3BhdGgiOiIvemxtbGtMVk5leFVjaXYzZmZkdHFIRUxFVmdnLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDYtMDgtMzEiLCJ0aXRsZSI6IkxpdHRsZSBNYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS45LCJ2b3RlX2NvdW50IjoxMzI1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9jM0Y0UDJvYXVBN0lRbXk0aE0wT21SdDJXN2QuanBnIiwiZ2VucmVfaWRzIjpbODc4LDI4LDUzXSwiaWQiOjQ1MzQwNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiR2VtaW5pIE1hbiIsIm92ZXJ2aWV3IjoiSGVucnkgQnJvZ2FuIGlzIGFuIGVsaXRlIDUxLXllYXItb2xkIGFzc2Fzc2luIHdobydzIHJlYWR5IHRvIGNhbGwgaXQgcXVpdHMgYWZ0ZXIgY29tcGxldGluZyBoaXMgNzJuZCBqb2IuIEhpcyBwbGFucyBnZXQgdHVybmVkIHVwc2lkZSBkb3duIHdoZW4gaGUgYmVjb21lcyB0aGUgdGFyZ2V0IG9mIGEgbXlzdGVyaW91cyBvcGVyYXRpdmUgd2hvIGNhbiBzZWVtaW5nbHkgcHJlZGljdCBoaXMgZXZlcnkgbW92ZS4gVG8gaGlzIGhvcnJvciwgQnJvZ2FuIHNvb24gbGVhcm5zIHRoYXQgdGhlIG1hbiB3aG8ncyB0cnlpbmcgdG8ga2lsbCBoaW0gaXMgYSB5b3VuZ2VyLCBmYXN0ZXIsIGNsb25lZCB2ZXJzaW9uIG9mIGhpbXNlbGYuIiwicG9wdWxhcml0eSI6MzguNjk5LCJwb3N0ZXJfcGF0aCI6Ii91VEFMeGpRVThlMWxobU5qUDlubkozdDJwUlUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMC0wMiIsInRpdGxlIjoiR2VtaW5pIE1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjQsInZvdGVfY291bnQiOjQyODN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzZjN2o3TVFDY3p6TlZ2Y3JORWlYYnM4S3QycC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOCw1M10sImlkIjo5NTA5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJNYW4gb24gRmlyZSIsIm92ZXJ2aWV3IjoiSmFkZWQgZXgtQ0lBIG9wZXJhdGl2ZSBKb2huIENyZWFzeSByZWx1Y3RhbnRseSBhY2NlcHRzIGEgam9iIGFzIHRoZSBib2R5Z3VhcmQgZm9yIGEgMTAteWVhci1vbGQgZ2lybCBpbiBNZXhpY28gQ2l0eS4gVGhleSBjbGFzaCBhdCBmaXJzdCwgYnV0IGV2ZW50dWFsbHkgYm9uZCwgYW5kIHdoZW4gc2hlJ3Mga2lkbmFwcGVkIGhlJ3MgY29uc3VtZWQgYnkgZnVyeSBhbmQgd2lsbCBzdG9wIGF0IG5vdGhpbmcgdG8gc2F2ZSBoZXIgbGlmZS4iLCJwb3B1bGFyaXR5Ijo1My4yMTksInBvc3Rlcl9wYXRoIjoiL3Y4SDZkUHFYaEhXVzEzN3VieHFENEhkSFRpYi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA0LTA0LTIzIiwidGl0bGUiOiJNYW4gb24gRmlyZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjQsInZvdGVfY291bnQiOjQxMDd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL25nNlNTQjNKaGJjcEtUd2JQRHNSd1VZSzhDcS5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJpZCI6NDI5NjE3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGlkZXItTWFuOiBGYXIgRnJvbSBIb21lIiwib3ZlcnZpZXciOiJQZXRlciBQYXJrZXIgYW5kIGhpcyBmcmllbmRzIGdvIG9uIGEgc3VtbWVyIHRyaXAgdG8gRXVyb3BlLiBIb3dldmVyLCB0aGV5IHdpbGwgaGFyZGx5IGJlIGFibGUgdG8gcmVzdCAtIFBldGVyIHdpbGwgaGF2ZSB0byBhZ3JlZSB0byBoZWxwIE5pY2sgRnVyeSB1bmNvdmVyIHRoZSBteXN0ZXJ5IG9mIGNyZWF0dXJlcyB0aGF0IGNhdXNlIG5hdHVyYWwgZGlzYXN0ZXJzIGFuZCBkZXN0cnVjdGlvbiB0aHJvdWdob3V0IHRoZSBjb250aW5lbnQuIiwicG9wdWxhcml0eSI6MTU3LjI0NSwicG9zdGVyX3BhdGgiOiIvNHEyTk5qNFM1ZEcyUkxGOUNwWHNlajd5WGwuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNi0yOCIsInRpdGxlIjoiU3BpZGVyLU1hbjogRmFyIEZyb20gSG9tZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjUsInZvdGVfY291bnQiOjEyNTMyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90UVBEd2wxak5aaTU5S29GVDJveEREbmxxaEcuanBnIiwiZ2VucmVfaWRzIjpbMjcsOTY0OCw1M10sImlkIjo0MzkwMTUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlNsZW5kZXIgTWFuIiwib3ZlcnZpZXciOiJJbiBhIHNtYWxsIHRvd24gaW4gTWFzc2FjaHVzZXR0cywgZm91ciBoaWdoIHNjaG9vbCBnaXJscyBwZXJmb3JtIGEgcml0dWFsIGluIGFuIGF0dGVtcHQgdG8gZGVidW5rIHRoZSBsb3JlIG9mIFNsZW5kZXIgTWFuLiBXaGVuIG9uZSBvZiB0aGUgZ2lybHMgZ29lcyBteXN0ZXJpb3VzbHkgbWlzc2luZywgdGhleSBiZWdpbiB0byBzdXNwZWN0IHRoYXQgc2hlIGlzLCBpbiBmYWN0LCBoaXMgbGF0ZXN0IHZpY3RpbS4iLCJwb3B1bGFyaXR5IjoyOC41MDMsInBvc3Rlcl9wYXRoIjoiL2h1U25jczRSeXZRREJtSGpCQllIU0JZSmJTSi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA4LTEwIiwidGl0bGUiOiJTbGVuZGVyIE1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo0LjQsInZvdGVfY291bnQiOjE2Mjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3pscFp6Y2N5cGtBWUZaSXlZTFFjY2hsOTBaQy5qcGciLCJnZW5yZV9pZHMiOls4NzgsMjgsODAsMTA3NzBdLCJpZCI6MjI1OTE0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTcGlkZXItTWFuIiwib3ZlcnZpZXciOiJXaGVuIGFuIGV4dG9ydGlvbmlzdCB0aHJlYXRlbnMgdG8gZm9yY2UgYSBtdWx0aS1zdWljaWRlIHVubGVzcyBhIGh1Z2UgcmFuc29tIGlzIHBhaWQsIG9ubHkgUGV0ZXIgUGFya2VyIGNhbiBzdG9wIGhpbSB3aXRoIGhpcyBuZXcgcG93ZXJzIGFzIFNwaWRlci1NYW4uIiwicG9wdWxhcml0eSI6MjUuMzQsInBvc3Rlcl9wYXRoIjoiL2pOeFJIWjJjeFZrTlJ0eGdIdUN0djdHWTRKUC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc3LTA5LTE0IiwidGl0bGUiOiJTcGlkZXItTWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuNSwidm90ZV9jb3VudCI6ODB9XSwidG90YWxfcGFnZXMiOjUwMCwidG90YWxfcmVzdWx0cyI6MTAwMDB9
  recorded_at: Wed, 11 May 2022 22:40:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT SHOW MY API KEY&page=2&query=man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 11 May 2022 22:40:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 29f1da35ce271d2cdc88184ed0c1f86c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6v5UrpV-uIPIk7a-NPBvoHO-9T6fU8eYExBprCmNlGtf4jHPI-LDgg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 11 May 2022 22:40:44 GMT
recorded_with: VCR 6.1.0
